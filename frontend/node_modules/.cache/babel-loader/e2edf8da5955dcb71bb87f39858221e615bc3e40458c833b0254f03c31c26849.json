{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/Skill_Navigator/frontend/src/components/RecommendationForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './recommendationForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RecommendationForm = () => {\n  _s();\n  const [skills, setSkills] = useState('');\n  const [recommendations, setRecommendations] = useState('');\n  const [error, setError] = useState('');\n  const prompts = [\"Write a to-do list for a personal project or task\", \"Generate an email to reply to a job offer\", \"Summarize this article or text for me in one paragraph\", \"How does AI work in a technical capacity\"];\n\n  // Handle prompt selection\n  const handlePromptClick = prompt => {\n    setSkills(prompt); // Set the clicked prompt as the value in the text area\n  };\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    setRecommendations('');\n    try {\n      const skillsArray = skills.split(',').map(skill => skill.trim()).filter(skill => skill);\n      if (skillsArray.length === 0) {\n        setError('Please enter at least one skill.');\n        return;\n      }\n      const response = await axios.post('http://localhost:3001/recommend/get_recommendations', {\n        skills: skillsArray\n      });\n\n      // Assuming the response contains HTML content in recommendations\n      setRecommendations(response.data.recommendations);\n    } catch (err) {\n      console.error('Error fetching recommendations:', err);\n      setError('Failed to fetch recommendations. Please try again.');\n    }\n  };\n\n  // Refresh prompts logic (optional, here it's just resetting the text area)\n  const handleRefreshPrompts = () => {\n    setSkills(''); // Clear skills input on refresh\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recommendation-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Hi there, \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"name-highlight\",\n          children: \"John\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"What \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-highlight\",\n          children: \"would you like to know?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Use one of the most common prompts below or use your own to begin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"prompt-cards\",\n      children: prompts.map((prompt, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"prompt-card\",\n        onClick: () => handlePromptClick(prompt),\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: prompt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"refresh-btn\",\n      onClick: handleRefreshPrompts,\n      children: \"\\uD83D\\uDD04 Refresh Prompts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"input-container\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Ask whatever you want....\",\n        value: skills,\n        onChange: e => setSkills(e.target.value) // Keeps the current input in the text area\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"attachment-btn\",\n          children: \"Add Attachment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"image-btn\",\n          children: \"Use Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-btn\",\n          children: \"\\u2794\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), recommendations && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recommendations-output\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Recommended Job Roles:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: recommendations\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(RecommendationForm, \"uAa3ymA0ELlMv3jhiy2UCTu5ZMc=\");\n_c = RecommendationForm;\nexport default RecommendationForm;\nvar _c;\n$RefreshReg$(_c, \"RecommendationForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","RecommendationForm","_s","skills","setSkills","recommendations","setRecommendations","error","setError","prompts","handlePromptClick","prompt","handleSubmit","e","preventDefault","skillsArray","split","map","skill","trim","filter","length","response","post","data","err","console","handleRefreshPrompts","className","children","fileName","_jsxFileName","lineNumber","columnNumber","index","onClick","onSubmit","placeholder","value","onChange","target","type","_c","$RefreshReg$"],"sources":["/Users/apple/Desktop/Skill_Navigator/frontend/src/components/RecommendationForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './recommendationForm.css';\n\nconst RecommendationForm = () => {\n    const [skills, setSkills] = useState('');\n    const [recommendations, setRecommendations] = useState('');\n    const [error, setError] = useState('');\n\n    const prompts = [\n        \"Write a to-do list for a personal project or task\",\n        \"Generate an email to reply to a job offer\",\n        \"Summarize this article or text for me in one paragraph\",\n        \"How does AI work in a technical capacity\",\n    ];\n\n    // Handle prompt selection\n    const handlePromptClick = (prompt) => {\n        setSkills(prompt); // Set the clicked prompt as the value in the text area\n    };\n\n    // Handle form submission\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setError('');\n        setRecommendations('');\n\n        try {\n            const skillsArray = skills.split(',').map(skill => skill.trim()).filter(skill => skill);\n            if (skillsArray.length === 0) {\n                setError('Please enter at least one skill.');\n                return;\n            }\n\n            const response = await axios.post('http://localhost:3001/recommend/get_recommendations', {\n                skills: skillsArray\n            });\n\n            // Assuming the response contains HTML content in recommendations\n            setRecommendations(response.data.recommendations);\n        } catch (err) {\n            console.error('Error fetching recommendations:', err);\n            setError('Failed to fetch recommendations. Please try again.');\n        }\n    };\n\n    // Refresh prompts logic (optional, here it's just resetting the text area)\n    const handleRefreshPrompts = () => {\n        setSkills(''); // Clear skills input on refresh\n    };\n\n    return (\n        <div className=\"recommendation-form-container\">\n            {/* Greeting and Title */}\n            <div className=\"header\">\n                <h1>Hi there, <span className=\"name-highlight\">John</span></h1>\n                <h2>What <span className=\"text-highlight\">would you like to know?</span></h2>\n                <p>Use one of the most common prompts below or use your own to begin</p>\n            </div>\n\n            {/* Prompt Cards */}\n            <div className=\"prompt-cards\">\n                {prompts.map((prompt, index) => (\n                    <div \n                        key={index} \n                        className=\"prompt-card\"\n                        onClick={() => handlePromptClick(prompt)}\n                    >\n                        <p>{prompt}</p>\n                    </div>\n                ))}\n            </div>\n\n            <button className=\"refresh-btn\" onClick={handleRefreshPrompts}>🔄 Refresh Prompts</button>\n\n            {/* Input Section */}\n            <form className=\"input-container\" onSubmit={handleSubmit}>\n                <textarea\n                    placeholder=\"Ask whatever you want....\"\n                    value={skills}\n                    onChange={(e) => setSkills(e.target.value)} // Keeps the current input in the text area\n                />\n                {error && <p className=\"error-text\">{error}</p>}\n                \n                <div className=\"input-actions\">\n                    <button type=\"button\" className=\"attachment-btn\">Add Attachment</button>\n                    <button type=\"button\" className=\"image-btn\">Use Image</button>\n                    <button type=\"submit\" className=\"submit-btn\">➔</button>\n                </div>\n            </form>\n\n            {/* Display Recommendations */}\n            {recommendations && (\n                <div className=\"recommendations-output\">\n                    <h3>Recommended Job Roles:</h3>\n                    <p>{recommendations}</p>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default RecommendationForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}